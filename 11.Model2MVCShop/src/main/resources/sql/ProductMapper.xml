<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="fileName" 	column="image_file" 		jdbcType="VARCHAR" />
		<result property="manuDate"		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 		column="price" 				jdbcType="NUMERIC" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="prodName" 	column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodNo" 		column="prod_no" 			jdbcType="NUMERIC" />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
		<result property="prodCount" 	column="prod_count" 		jdbcType="NUMERIC" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert id="insertProduct" parameterType="product" >
	 	INSERT
		INTO product(prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date, prod_count) 
		VALUES (seq_product_prod_no.nextval, #{prodName}, #{prodDetail}, #{manuDate}, #{price}, #{fileName}, SYSDATE, #{prodCount:NUMERIC})
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select id="getProduct" parameterType="int" resultMap="productSelectMap">
		SELECT
		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
		FROM product
		WHERE prod_no = #{value}
	 </select>
	 
	 <select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no prod_no, p.prod_name prod_name, p.prod_detail prod_detail, 
	  											p.manufacture_day manufacture_day, p.price price, p.image_file image_file, p.reg_date reg_date, 
	  											NVL(t.tran_status_code, 0) tran_code, NVL(t.tran_no, 0) tran_no 
											FROM product p, transaction t
											<if test="searchCondition == null">
												WHERE p.prod_no = t.prod_no(+)
												ORDER BY p.prod_name
											</if>
											<if test="searchCondition != null">
												<where>
													p.prod_no = t.prod_no(+)
													<if test="searchCondition == 0 and searchKeyword =='' ">
										 				AND p.prod_name like '%${searchKeyword}%'
										 				ORDER BY p.prod_name
													</if>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				AND p.prod_name like '%${searchKeyword}%'
										 				ORDER BY p.prod_name
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				AND NVL(t.tran_status_code, 0) = '0' 
										 				ORDER BY p.prod_name
													</if>
												</where>
													<if test="searchCondition == 1">
										 				ORDER BY p.price DESC, p.prod_name
													</if>
													<if test="searchCondition == 2">
										 				ORDER BY p.price, p.prod_name 
													</if>
											</if> ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update id="updateProduct" parameterType="product">
	   	UPDATE product
	   	<set>
			prod_name			= #{prodName},
			prod_detail 		= #{prodDetail} ,
			manufacture_day		= #{manuDate},
			price				= #{price},
			image_file			= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no prod_no, t.prod_no tprod_no
				FROM product p, transaction t
			 	WHERE p.prod_no = t.prod_no(+)
				ORDER BY p.prod_name ) countTable						
	 </select>
</mapper>